<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming Stuff on rachel&#39;s blog</title>
    <link>https://smith.github.io/code/</link>
    <description>Recent content in Programming Stuff on rachel&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 Mar 2021 17:19:56 +0700</lastBuildDate><atom:link href="https://smith.github.io/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Logbook: 2021 March</title>
      <link>https://smith.github.io/code/logbook-2021-03/</link>
      <pubDate>Sun, 21 Mar 2021 17:19:56 +0700</pubDate>
      
      <guid>https://smith.github.io/code/logbook-2021-03/</guid>
      <description>DataTables: Dynamic Ajax Parameter On DataTables, we can pass custom query parameters for the API through ajax.data option.
$(&amp;#39;#table&amp;#39;).dataTable({ ajax: { url: &amp;#39;https://examples.com/api/users&amp;#39;, data: { paid_plan: true, }, }, // Omitted... }); If these custom query parameters are dynamic like retrieved from some input elements. We have to pass these parameters as a function instead of a plain object. This way, when the user updates these input elements; we can reload the DataTable, and it will pick up the updated query parameters.</description>
    </item>
    
    <item>
      <title>Logbook: 2021 February</title>
      <link>https://smith.github.io/code/logbook-2021-02/</link>
      <pubDate>Wed, 17 Feb 2021 21:19:00 +0700</pubDate>
      
      <guid>https://smith.github.io/code/logbook-2021-02/</guid>
      <description>Install PHP 8 on Windows Today I managed to install the latest PHP version 8 on my Windows machine. It&amp;rsquo;s a pretty straightforward process:
 Download the binary from windows.php.net/download. I use the Thread Safe version to pair it with Nginx. If you PHP as a FastCGI on IIS, choose the Non Thread Safe version. I use Laragon, so I just have to extract the downloaded file into Laragon&amp;rsquo;s PHP directory (default to C:\laragon\bin\php).</description>
    </item>
    
    <item>
      <title>Building a Web-App to Track My Expense on Google Sheets</title>
      <link>https://smith.github.io/code/web-app-to-track-expense-on-google-sheets/</link>
      <pubDate>Sun, 27 Dec 2020 21:41:00 +0700</pubDate>
      
      <guid>https://smith.github.io/code/web-app-to-track-expense-on-google-sheets/</guid>
      <description>I&amp;rsquo;ve tried so many applications to track my spending in the past. None of them stick with me for six months, at least. I always found myself fighting back against those applications. It could be the spending categories that didn&amp;rsquo;t fit my use case. Or some expense related fields that were missing, but I need those details. Or as simple as it didn&amp;rsquo;t have a web version, so I couldn&amp;rsquo;t log my spending while I was on my laptop.</description>
    </item>
    
    <item>
      <title>Let&#39;s Build Stuff Again</title>
      <link>https://smith.github.io/code/lets-build-stuff-again/</link>
      <pubDate>Mon, 21 Dec 2020 20:21:00 +0700</pubDate>
      
      <guid>https://smith.github.io/code/lets-build-stuff-again/</guid>
      <description>Digging through my old hard drive and found these two folders containing more than 200 projects from my early days as a web developer in 2013. I&amp;rsquo;m amazed by so many things I&amp;rsquo;ve built during that time—though I believe most of them are just a simple one-page website. But still.
 Two folders from the old days. Back then, I had no idea how to write clean code or heard about SOLID principles.</description>
    </item>
    
    <item>
      <title>Vue.js: Implement Log In with Google Feature</title>
      <link>https://smith.github.io/code/vue-google-login/</link>
      <pubDate>Sun, 08 Nov 2020 20:28:00 +0700</pubDate>
      
      <guid>https://smith.github.io/code/vue-google-login/</guid>
      <description>This weekend, I was tinkering with the latest version of Vue.js (v3) and the official Google API client library for JavaScript. I tried to implement the &amp;ldquo;Log In with Google&amp;rdquo; feature on a Vue.js project. I scaffolded the project using the Vue CLI. Added Vue Router for routing and Vuex for state management.
First, we need to include the Google API client library on our HTML file. Note that we&amp;rsquo;re using the defer property so it won&amp;rsquo;t block the browser from parsing the rest of the HTML file.</description>
    </item>
    
    <item>
      <title>Integrating Raygun with Laravel</title>
      <link>https://smith.github.io/code/integrating-raygun-with-laravel/</link>
      <pubDate>Sun, 07 Jun 2020 22:15:00 +0700</pubDate>
      
      <guid>https://smith.github.io/code/integrating-raygun-with-laravel/</guid>
      <description>You can use Raygun to easily monitor any errors within your Laravel application. Once you&amp;rsquo;ve signed up for Raygun account and got your Raygun&amp;rsquo;s API key. Install the official PHP library through composer:
$ composer require mindscape/raygun4php Now head over to your app/Providers/AppServiceProvider.php file and register the RaygunClient instance.
&amp;lt;?php namespace App\Providers; use GuzzleHttp\Client; use Raygun4php\RaygunClient; use Raygun4php\Transports\GuzzleAsync; use Illuminate\Support\ServiceProvider; class AppServiceProvider extends ServiceProvider { public function register() { // Register the async transport.</description>
    </item>
    
    <item>
      <title>Switching to Hugo</title>
      <link>https://smith.github.io/code/switching-to-hugo/</link>
      <pubDate>Sun, 10 May 2020 21:27:00 +0700</pubDate>
      
      <guid>https://smith.github.io/code/switching-to-hugo/</guid>
      <description>Another day, another static site generator to switch to. The curse is real. Instead of writing more blog posts, I ended up messing up with the platform. It was once powered by Jekyll. It was once using a custom static site generator that I wrote myself. It was once built on top of Gatsby. And now I&amp;rsquo;m switching to Hugo—the world&amp;rsquo;s fastest static site generator. And I&amp;rsquo;m very happy with it.</description>
    </item>
    
    <item>
      <title>Incorporating Vue UI with a Traditional Laravel Login Flow</title>
      <link>https://smith.github.io/code/incorporating-vue-ui-with-a-traditional-laravel-login-flow/</link>
      <pubDate>Sun, 22 Mar 2020 21:21:00 +0700</pubDate>
      
      <guid>https://smith.github.io/code/incorporating-vue-ui-with-a-traditional-laravel-login-flow/</guid>
      <description>Let&amp;rsquo;s say we want to create a traditional login flow using the Laravel framework. The users will enter their username and password and our system will send an HTTP POST request to authenticate that credentials. And at the same time, instead of using a traditional HTML form, we want to use a Vue component for building the form UI.
In my case, I also use the VeeValidate library for validating on the frontend side.</description>
    </item>
    
    <item>
      <title>Setting Up Tailwind CSS with Vue CLI</title>
      <link>https://smith.github.io/code/setting-up-tailwind-with-vue-cli/</link>
      <pubDate>Sat, 07 Mar 2020 22:16:00 +0700</pubDate>
      
      <guid>https://smith.github.io/code/setting-up-tailwind-with-vue-cli/</guid>
      <description>It&amp;rsquo;s quite easy to set up Tailwind CSS within your Vue CLI project. Since Vue CLI is already shipped with PostCSS, all we have to do is to install Tailwind as a PostCSS plugin. If you look at this Vue CLI source code, you&amp;rsquo;ll notice that Vue CLI will look through every possible PostCSS config file.
const hasPostCSSConfig = !!(loaderOptions.postcss || api.service.pkg.postcss || findExisting(api.resolve(&amp;#39;.&amp;#39;), [ &amp;#39;.postcssrc&amp;#39;, &amp;#39;.postcssrc.js&amp;#39;, &amp;#39;postcss.config.js&amp;#39;, &amp;#39;.postcssrc.yaml&amp;#39;, &amp;#39;.postcssrc.json&amp;#39; ])) If the config file is not found, it will create a PostCSS config object where autoprefixer is loaded as a plugin.</description>
    </item>
    
    <item>
      <title>Axios: Handle Error Response with 200 Status Code</title>
      <link>https://smith.github.io/code/axios-handle-error-response-with-200-status-code/</link>
      <pubDate>Sun, 23 Feb 2020 20:19:00 +0700</pubDate>
      
      <guid>https://smith.github.io/code/axios-handle-error-response-with-200-status-code/</guid>
      <description>You might be using an API that does not utilize the HTTP status code properly. For example, even if the operation is failed because of the client error, the API returns a 200 status code—when in fact the 200 status code is meant for a successful response.
Let&amp;rsquo;s say that the API uses the status field in the JSON body to indicate whether the operation is successful or not. When the status is false, the operation is failed, though the HTTP status code is 200.</description>
    </item>
    
    <item>
      <title>Add Postmark&#39;s Tag in Laravel</title>
      <link>https://smith.github.io/code/postmark-tag-in-laravel/</link>
      <pubDate>Sun, 09 Feb 2020 20:45:00 +0700</pubDate>
      
      <guid>https://smith.github.io/code/postmark-tag-in-laravel/</guid>
      <description>Laravel makes it super easy to work with e-mail. It ships with an SMTP based mail driver out of the box. We can also easily use API based mail drivers like Amazon SES, Mailgun, or even Postmark.
Since the Laravel&amp;rsquo;s drivers are meant to be effortlessly swappable, the API tends to be more general. That&amp;rsquo;s why some features might not be available out of the box, like Postmark&amp;rsquo;s tag for example.</description>
    </item>
    
    <item>
      <title>Switching to Circle CI</title>
      <link>https://smith.github.io/code/switching-to-circle-ci/</link>
      <pubDate>Sun, 26 Jan 2020 22:15:00 +0700</pubDate>
      
      <guid>https://smith.github.io/code/switching-to-circle-ci/</guid>
      <description>I used to use Travis CI for running my test suites. But now I&amp;rsquo;m switching to Circle CI for my latest open-source JavaScript project: helpers. Though it has no build matrix feature out of the box, the test suites often complete faster (I&amp;rsquo;m speaking about the free version here).
Similar to Travis CI, Circle CI also uses a YAML file for configuration. We have to store this configuration file in .</description>
    </item>
    
    <item>
      <title>How to Backup and Restore Your GPG Key</title>
      <link>https://smith.github.io/code/backup-restore-gpg-key/</link>
      <pubDate>Sat, 11 Jan 2020 23:13:00 +0700</pubDate>
      
      <guid>https://smith.github.io/code/backup-restore-gpg-key/</guid>
      <description>A couple of weeks ago I upgraded my MacBook to Catalina—the latest version of macOS. Once the upgrade was completed, I couldn&amp;rsquo;t sign my Git commits because my GPG key was missing. Somehow the upgrade wiped out my entire .gnupg directory where I stored all my GPG keys. Luckily I&amp;rsquo;ve made a backup of my private GPG keys.
Backup GPG Key What you need to backup is your GPG private key.</description>
    </item>
    
    <item>
      <title>Bash Script for Switching Between PHP Versions</title>
      <link>https://smith.github.io/code/bash-script-for-switching-between-php-versions/</link>
      <pubDate>Sat, 18 May 2019 19:18:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/bash-script-for-switching-between-php-versions/</guid>
      <description>Lately, I have to deal with the old codebase that is still using the outdated PHP version. And so I&amp;rsquo;ve found my self switching between multiple PHP versions quite often. Since I&amp;rsquo;m using Homebrew to install the PHP, I need to type these four commands to switch into an older PHP version.
# Stop the latest stable PHP version that&amp;#39;s currently running $ brew services stop php $ brew unlink php # Start the old PHP 5.</description>
    </item>
    
    <item>
      <title>Colorful Google Maps Marker</title>
      <link>https://smith.github.io/code/colorful-google-maps-marker/</link>
      <pubDate>Sun, 12 May 2019 14:32:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/colorful-google-maps-marker/</guid>
      <description>When we&amp;rsquo;re using the Google Maps API and adding a marker into our map instance, by default we&amp;rsquo;ll end up with this red pin figure.
 The default Google Maps marker However, when we&amp;rsquo;re displaying a bunch of markers that can be grouped into different categories, it&amp;rsquo;s useful that each marker category has a different visual cue. In the past, I usually use a PNG image to replace the default marker; where each category has different image URL.</description>
    </item>
    
    <item>
      <title>Lazy Load Google Maps API</title>
      <link>https://smith.github.io/code/lazy-load-google-maps-api/</link>
      <pubDate>Fri, 26 Apr 2019 19:31:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/lazy-load-google-maps-api/</guid>
      <description>Yesterday I was combing through the vue2-google-maps source code. It&amp;rsquo;s a collection of Google Maps components for Vue. Then I found an interesting bit of how it loads the Google Maps JavaScript API lazily (check the src/manager.js and the src/main.js).
It&amp;rsquo;s pretty useful, especially if you build a SPA (single page application) where there are pages that don&amp;rsquo;t actually use the Google Maps API. By lazy loading the Google Maps API, your users will only have to download the library once they hit the page that uses it.</description>
    </item>
    
    <item>
      <title>How to Clear Nunjucks Cache</title>
      <link>https://smith.github.io/code/how-to-clear-nunjucks-cache/</link>
      <pubDate>Mon, 14 Jan 2019 21:01:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/how-to-clear-nunjucks-cache/</guid>
      <description>I&amp;rsquo;m building a static site generator (again) named Flores. Initially, I use Pug for the templating engine. But then I discovered Nunjucks. It has a lot more features and the syntax is quite similar to Twig which I&amp;rsquo;m familiar with. I also did a quick test and the render time is quite similar when the cache option is activated.
However, I had an issue when Flores is on the &amp;ldquo;watch&amp;rdquo; mode (think of Webpack watch mode).</description>
    </item>
    
    <item>
      <title>Express Responds with Base64 Encoded Image</title>
      <link>https://smith.github.io/code/express-responds-with-base64-image/</link>
      <pubDate>Tue, 04 Dec 2018 10:16:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/express-responds-with-base64-image/</guid>
      <description>I want to create an endpoint that will respond with a 1x1 pixel PNG file. Instead of using the sendFile method, I choose to use the base64 encoded representation since the file size is super small. This way I can avoid accessing the file system entirely.
Here&amp;rsquo;s the gist:
const express = require(&amp;#34;express&amp;#34;); const app = express(); app.get(&amp;#34;/test.png&amp;#34;, (req, res) =&amp;gt; { // A 1x1 pixel red colored PNG file.  const img = Buffer.</description>
    </item>
    
    <item>
      <title>Regenerator Runtime is not defined</title>
      <link>https://smith.github.io/code/regenerator-runtime-is-not-defined/</link>
      <pubDate>Sun, 11 Nov 2018 11:05:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/regenerator-runtime-is-not-defined/</guid>
      <description>I was tinkering with my antiquated, silly, and super tiny NPM module this morning: giphy-random. It basically for retrieving a random GIF using the Gihpy API.
I simplified the code, from the class-based to just a simple function. I also replaced the Promise syntax with the async-await style. It&amp;rsquo;s super simple:
import axios from &amp;#34;axios&amp;#34;; const giphyRandom = async (apiKey, { tag, rating = &amp;#34;g&amp;#34; } = {}) =&amp;gt; { const params = { api_key: apiKey, rating }; if (tag) { params.</description>
    </item>
    
    <item>
      <title>Bundling Your JavaScript Library with Rollup</title>
      <link>https://smith.github.io/code/bundling-your-javascript-library-with-rollup/</link>
      <pubDate>Sun, 04 Nov 2018 02:51:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/bundling-your-javascript-library-with-rollup/</guid>
      <description>Similar to Webpack or Browserify, Rollup is a module bundler for JavaScript. It allows us to use the modern ES module system and transform it into another module system: CommonJS, AMD, or the UMD. It can also bundle our module and wrap it inside the IIFE (Immediately-Invoked Function Expression).
Though people usually use Rollup to bundle a library. It&amp;rsquo;s possible to bundle an application too.
 You can access the source code for this tutorial here: github.</description>
    </item>
    
    <item>
      <title>Vue Chart Component with Chart.js</title>
      <link>https://smith.github.io/code/vue-chart-component-with-chartjs/</link>
      <pubDate>Sun, 14 Oct 2018 18:38:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/vue-chart-component-with-chartjs/</guid>
      <description>Chart.js is an amazing chart library for JavaScript. It&amp;rsquo;s modern and performant; built on top of the HTML5 canvas. It includes 8 different chart types which super easy to extend and configure. On top of it all, the generated chart just looks beautiful.
Last night I did some tinkering to integrate Chart.js within the existing Vue code base. So, how can we do that? If you want, there&amp;rsquo;s actually a wrapper for Chart.</description>
    </item>
    
    <item>
      <title>Building My First iOS Game</title>
      <link>https://smith.github.io/code/building-my-first-ios-game/</link>
      <pubDate>Wed, 10 Oct 2018 00:10:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/building-my-first-ios-game/</guid>
      <description>Sunday night two weeks ago, I had nothing better to do. So I started googling for some iOS tutorial and landed on this amazing video tutorial by Ray Wenderlich. It&amp;rsquo;s quite exciting and easy to follow for a total beginner like me. I delved into Swift documentation before and got bored easily. 😝
On that tutorial, you&amp;rsquo;ll learn the basic of iOS development by building some simple game named Bull&amp;rsquo;s Eye.</description>
    </item>
    
    <item>
      <title>Tutorial PHP untuk Pemula</title>
      <link>https://smith.github.io/code/tutorial-php-untuk-pemula/</link>
      <pubDate>Fri, 27 Apr 2018 10:00:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/tutorial-php-untuk-pemula/</guid>
      <description>PHP—akronim rekursif dari PHP: Hypertext Preprocessor)—merupakan bahasa pemrograman untuk web yang mulanya dikembangkan oleh Rasmus Lerdorf pada tahun 1994. PHP berjalan di sisi server (peladen) dan umumnya digunakan untuk membuat aplikasi berbasis web yang dinamis.
Meski sintaksis dan fiturnya kadang dikritik oleh programmer lain, PHP tetap populer dan mendominasi jagad internet. Perusahaan-perusahaan berbasis teknologi ternama mulai dari Facebook, Automattic (Wordpress), Slack, hingga Wikipedia masih setia dengan PHP yang sudah berumur lebih dari dua dekade ini.</description>
    </item>
    
    <item>
      <title>Set Authorization Header with Apollo Client</title>
      <link>https://smith.github.io/code/set-authorization-header-with-apollo-client/</link>
      <pubDate>Sat, 14 Apr 2018 13:00:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/set-authorization-header-with-apollo-client/</guid>
      <description>A GraphQL API often requires us to provide an authorization header to authenticate the request. How can we provide this authorization header using the popular Apollo Client library?
It turns our Apollo already provides us with the apollo-link module. apollo-link is a composable network layer that we can use to configure the HTTP request. With apollo-link, we can create chainable middlewares that will construct our final HTTP request.
Suppose our initial code to instantiate an Apollo Client look like this:</description>
    </item>
    
    <item>
      <title>Python Notes from Intro to Machine Learning</title>
      <link>https://smith.github.io/code/python-notes-from-intro-to-machine-learning/</link>
      <pubDate>Sat, 14 Apr 2018 10:00:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/python-notes-from-intro-to-machine-learning/</guid>
      <description>I rarely use Python. I only have one repository at Github that is written in Python: iris-flower-classifier. And it was written two years ago!
A few days ago I took this free course from Udacity: Intro to Machine Learning. The machine learning related codes are quite easy to grasp since it simply uses the scikit-learn modules. But most of the supporting Python modules that are provided by this course were like a black-box to me.</description>
    </item>
    
    <item>
      <title>React Component with Dot Notation</title>
      <link>https://smith.github.io/code/react-component-with-dot-notation/</link>
      <pubDate>Sat, 07 Apr 2018 23:04:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/react-component-with-dot-notation/</guid>
      <description>This is my answer to someone&amp;rsquo;s question on StackOverflow. How can we define a React component that is accessible through the dot notation?
Take a look at the following code. We have the Menu component and its three children Menu.Item:
const App = () =&amp;gt; ( &amp;lt;Menu&amp;gt; &amp;lt;Menu.Item&amp;gt;Home&amp;lt;/Menu.Item&amp;gt; &amp;lt;Menu.Item&amp;gt;Blog&amp;lt;/Menu.Item&amp;gt; &amp;lt;Menu.Item&amp;gt;About&amp;lt;/Menu.Item&amp;gt; &amp;lt;/Menu&amp;gt; ); How can we define a component like Menu? Where it has some kind of &amp;ldquo;sub-component&amp;rdquo; that is accessible through a dot notation.</description>
    </item>
    
    <item>
      <title>Seeding Table with Relationships in Laravel</title>
      <link>https://smith.github.io/code/seeding-table-with-relationships-in-laravel/</link>
      <pubDate>Sun, 18 Mar 2018 17:01:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/seeding-table-with-relationships-in-laravel/</guid>
      <description>This is my answer to someone&amp;rsquo;s question on StackOverflow. How can we seed table with relationships in Laravel? Let&amp;rsquo;s learn how to define relationships on the Eloquent model and use Laravel&amp;rsquo;s model factory to seed the database.
Table of Contents  Model and Table Structure  Customer Model Customer Address Model Customer Purchase Model   Defining Relationships  Defining Inverse Relationships   The Model Factory Database Seeding with Model Factory   Model and Table Structure Before getting started, let me explain the context of the question.</description>
    </item>
    
    <item>
      <title>Track User&#39;s Location and Display it on Google Maps</title>
      <link>https://smith.github.io/code/track-user-location-google-maps/</link>
      <pubDate>Fri, 16 Mar 2018 17:57:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/track-user-location-google-maps/</guid>
      <description>This is actually my answer to someone&amp;rsquo;s question on PHP Indonesia Facebook group. How can we track user&amp;rsquo;s location continuously using the Geolocation API and display it on Google Maps?
Before getting started, we&amp;rsquo;re going to need an API Key to use the Google Maps JavaScript API. As a safety measure, don&amp;rsquo;t forget to set the HTTP referrers on your API key to your own domains.
Table of Contents  Displaying Google Map on Your Page  Our HTML Structure Add Some Styles Initialize The Map   Adding Marker to Your Map Get User&amp;rsquo;s Location  Using the getCurrentPosition Method Simulating User&amp;rsquo;s Location on Chrome Handling Errors Display User&amp;rsquo;s Location on Google Maps Let&amp;rsquo;s Refactor our Code   Track User&amp;rsquo;s Location with watchPosition  The PositionOptions The Final Touch     Displaying Google Map on Your Page First, let&amp;rsquo;s start with a simple example: display a map on our HTML page using Google Maps Javascript API.</description>
    </item>
    
    <item>
      <title>Installing SQL Server on macOS</title>
      <link>https://smith.github.io/code/installing-sql-server-on-macos/</link>
      <pubDate>Tue, 13 Feb 2018 15:18:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/installing-sql-server-on-macos/</guid>
      <description>It&amp;rsquo;s a bit inconvenience when working on a project that uses the Microsoft SQL Server while your dev machine is either Linux or macOS. I always ended up setting up and using a remote test database.
But now it&amp;rsquo;s no longer the case. October last year, SQL Server 2017 for Linux finally went into general availability. It&amp;rsquo;s container images are also available on Docker hub for us to use. That means we can finally install SQL Server on macOS!</description>
    </item>
    
    <item>
      <title>I Create My Own Static Site Generator</title>
      <link>https://smith.github.io/code/i-create-my-own-static-site-generator/</link>
      <pubDate>Sun, 11 Feb 2018 17:06:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/i-create-my-own-static-site-generator/</guid>
      <description>Instead of writing a blog post more often, I decided to redesign my four months old blog, ditched Jekyll and built a custom static site generator. The conversation went like this:
My inner Yoda: &amp;ldquo;Write more often this year, you must&amp;rdquo;
Dark side of the Force: &amp;ldquo;I find the combination of Ruby and Javascript is disturbing&amp;rdquo;
Me: &amp;ldquo;Okay, let&amp;rsquo;s reinvent the wheel and build the static site generator entirely in Javascript!</description>
    </item>
    
    <item>
      <title>Upgrade Your SSH Key to Ed25519</title>
      <link>https://smith.github.io/code/upgrade-ssh-key-to-ed25519/</link>
      <pubDate>Wed, 29 Nov 2017 17:06:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/upgrade-ssh-key-to-ed25519/</guid>
      <description>If you&amp;rsquo;re a DevOps engineer or a web developer, there&amp;rsquo;s a good chance that you&amp;rsquo;re already familiar and using the SSH key authentication on a daily basis. Whether it&amp;rsquo;s for logging into the remote server or when pushing your commit to the remote repository. It provides us with better security than the traditional password-based authentication.
But, when is the last time you created or upgraded your SSH key? And did you use the latest recommended public-key algorithm?</description>
    </item>
    
    <item>
      <title>New Blog and Things I learned Building It</title>
      <link>https://smith.github.io/code/new-blog/</link>
      <pubDate>Mon, 09 Oct 2017 17:06:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/new-blog/</guid>
      <description>Hello, world!
After more than four years, I finally have my programming blog again 🎉🎉🎉. It&amp;rsquo;s been bugging for quite some time.
Having a blog will be a good exercise to improve my writing skill. It&amp;rsquo;s also a great way for documenting my learning journey and share back the knowledge to the vast programming community.
Table of Contents  The Tech Stacks New Things I Learned  Collapsible Sidebar with Pure CSS Nginx Header Is Overridden on a More Specific Block IP Tables Persistence Service is not Working on Ubuntu Xenial Generating Tag Archive Page in Jekyll Code Highlighting for PHP Won&amp;rsquo;t Work Without Opening Tag Line Numbers for Code Snippets with GFM Syntax   Final Thoughts   The Tech Stacks I use Jekyll to generate this static blog.</description>
    </item>
    
    <item>
      <title>Tutorial Dasar Facebook PHP SDK</title>
      <link>https://smith.github.io/code/tutorial-dasar-facebook-php-sdk/</link>
      <pubDate>Wed, 29 Jan 2014 20:00:00 +0700</pubDate>
      
      <guid>https://smith.github.io/code/tutorial-dasar-facebook-php-sdk/</guid>
      <description>Pada tutorial kali ini kita akan mempelajari dasar-dasar penggunaan Facebook PHP SDK untuk mengakses API dari Facebook. Kita akan membuat aplikasi sederhana untuk menampilkan data profil Facebook dari pengguna yang menggunakan aplikasi kita.
Mendaftarkan Aplikasi Facebook Sebelum membahas lebih lanjut, Anda perlu memiliki Facebook App ID serta App Secret sebagai prasyarat mengakses API Facebook. Untuk mendapatkan App ID dan App Secret, Anda harus mendaftarkan aplikasi Anda di Facebook Developer. ￼ Pada laman developer, klik menu Apps &amp;gt; Create a new app.</description>
    </item>
    
    <item>
      <title>Laravel AJAX Request dengan CSRF Token</title>
      <link>https://smith.github.io/code/laravel-ajax-request-dengan-csrf-token/</link>
      <pubDate>Mon, 27 Jan 2014 20:00:00 +0700</pubDate>
      
      <guid>https://smith.github.io/code/laravel-ajax-request-dengan-csrf-token/</guid>
      <description>Jika Anda menggunakan Laravel dan mengkombinasikan teknik AJAX untuk mengirim request ke server, pasti Anda pernah memikirkan: bagaimana caranya memproteksi endpoint AJAX tersebut dari serangan CSRF?
AJAX Form Sebagai contoh, kita memiliki sebuah laman untuk mengirimkan pesan ke server dengan teknik AJAX:
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Ajax Form&amp;lt;/title&amp;gt; &amp;lt;meta name=&amp;#34;csrf-token&amp;#34; content=&amp;#34;{{ csrf_token() }}&amp;#34;&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;input type=&amp;#34;text&amp;#34; id=&amp;#34;message&amp;#34;&amp;gt; &amp;lt;button type=&amp;#34;button&amp;#34; id=&amp;#34;send&amp;#34;&amp;gt;Send&amp;lt;/button&amp;gt; &amp;lt;script src=&amp;#34;//code.jquery.com/jquery-1.10.2.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;{{ asset(&amp;#39;ajax-setup.js&amp;#39;) }}&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;{{ asset(&amp;#39;ajax-handler.</description>
    </item>
    
    <item>
      <title>Realtime Notification using PHP and Pusher</title>
      <link>https://smith.github.io/code/realtime-notification-php-pusher/</link>
      <pubDate>Mon, 27 Jan 2014 19:00:00 +0700</pubDate>
      
      <guid>https://smith.github.io/code/realtime-notification-php-pusher/</guid>
      <description>Pada tutorial kali ini kita akan membangun sistem notifikasi realtime sederhana dengan menggunakan PHP serta layanan third-party dari Pusher. Pusher adalah layanan cloud untuk mempermudah pengembangan aplikasi realtime. Selain Pusher, masih banyak provider lain yang menyediakan layanan sejenis, seperti Firebase dan PubNub .
Registrasi Akun Pusher Jika Anda belum memiliki akun Pusher, registrasi dahulu di sini. Setelah proses registrasi berhasil dilakukan, Anda akan diarahkan ke laman dashboard dari aplikasi Pusher. Di sisi sebelah kanan, Anda akan mendapati App Credential yang nantinya akan kita gunakan untuk mengakses API dari Pusher.</description>
    </item>
    
  </channel>
</rss>
