<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devops on rachel&#39;s blog</title>
    <link>https://smith.github.io/tags/devops/</link>
    <description>Recent content in devops on rachel&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Jan 2020 22:15:00 +0700</lastBuildDate><atom:link href="https://smith.github.io/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Switching to Circle CI</title>
      <link>https://smith.github.io/code/switching-to-circle-ci/</link>
      <pubDate>Sun, 26 Jan 2020 22:15:00 +0700</pubDate>
      
      <guid>https://smith.github.io/code/switching-to-circle-ci/</guid>
      <description>I used to use Travis CI for running my test suites. But now I&amp;rsquo;m switching to Circle CI for my latest open-source JavaScript project: helpers. Though it has no build matrix feature out of the box, the test suites often complete faster (I&amp;rsquo;m speaking about the free version here).
Similar to Travis CI, Circle CI also uses a YAML file for configuration. We have to store this configuration file in .</description>
    </item>
    
    <item>
      <title>Installing SQL Server on macOS</title>
      <link>https://smith.github.io/code/installing-sql-server-on-macos/</link>
      <pubDate>Tue, 13 Feb 2018 15:18:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/installing-sql-server-on-macos/</guid>
      <description>It&amp;rsquo;s a bit inconvenience when working on a project that uses the Microsoft SQL Server while your dev machine is either Linux or macOS. I always ended up setting up and using a remote test database.
But now it&amp;rsquo;s no longer the case. October last year, SQL Server 2017 for Linux finally went into general availability. It&amp;rsquo;s container images are also available on Docker hub for us to use. That means we can finally install SQL Server on macOS!</description>
    </item>
    
    <item>
      <title>Upgrade Your SSH Key to Ed25519</title>
      <link>https://smith.github.io/code/upgrade-ssh-key-to-ed25519/</link>
      <pubDate>Wed, 29 Nov 2017 17:06:00 +0200</pubDate>
      
      <guid>https://smith.github.io/code/upgrade-ssh-key-to-ed25519/</guid>
      <description>If you&amp;rsquo;re a DevOps engineer or a web developer, there&amp;rsquo;s a good chance that you&amp;rsquo;re already familiar and using the SSH key authentication on a daily basis. Whether it&amp;rsquo;s for logging into the remote server or when pushing your commit to the remote repository. It provides us with better security than the traditional password-based authentication.
But, when is the last time you created or upgraded your SSH key? And did you use the latest recommended public-key algorithm?</description>
    </item>
    
  </channel>
</rss>
